/*************************************
 * Name       : Snehal Utage
 * Course     : CSCI 522
 * Z-ID       : Z1888637
 * Project    : Final Project
 * Due Date   : 04/28/2021
 * Details    : Math Tutor App
 * ***********************************/
package edu.niu.cs.snehal.graduateproject;

//import the required packages
import androidx.appcompat.app.AppCompatActivity;

import android.content.Intent;
import android.os.Bundle;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;
import android.widget.Toast;

import java.util.ArrayList;
import java.util.Random;

/**
 * Class   : QuestionsActivity
 * Details : Called by the MainActivity after the operation button
 * is clicked(Addition / Subtraction / Multiplication).
 * User is presented with a screen where user can see one question
 * for the selected operation and user has to enter the answer
 * in an Edit Text field. In total there are 5 question to be
 * answered. Next question button is provided at the bottom to
 * go to next question. Home button provided at top corner to
 * go back to Main Screen. Once 5 questions are done user can
 * click on Get Score to get the result for their answers.
 */
public class QuestionsActivity extends AppCompatActivity
{
    //Define instance variables
    private TextView num1TV, num2TV, operationTV, operatorTV, questionNumTV;
    private EditText ansET;
    private Random randomNum = new Random();
    private int index = 0;

    //Instantiate object of class QuestionModel
    private ArrayList<QuestionModel> questionBank;

    //Instantiate Arraylist to store the user answers and the correct Answers
    private ArrayList<Integer> userAnswers = new ArrayList<Integer>();
    private ArrayList<Integer> correctAnswers = new ArrayList<Integer>();

    @Override
    protected void onCreate(Bundle savedInstanceState)
    {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_questions);

        //connect the instance variables with the items on screen
        num1TV = findViewById(R.id.num1TextView);
        num2TV = findViewById(R.id.num2TextView);
        operationTV = findViewById(R.id.titleTextView);
        operatorTV = findViewById(R.id.operatorTextView);
        questionNumTV = findViewById(R.id.qNumTextView);
        ansET = findViewById(R.id.ansEditText);

        //Get the Intent object
        Intent intent = getIntent();

        //Retrieve the information passed from MainActivity
        String operation = intent.getStringExtra("operation"),
                operator = intent.getStringExtra("operator") ;

        //Set the textview on the QuestionsActivity Screen based on the values passed
        operationTV.setText(operation);
        operatorTV.setText(operator);

        //Instantiate the question bank
        questionBank = new ArrayList<QuestionModel>();

        //Generate 5 random number pairs(num1, num2) and add them to the
        //questionBank ArrayList
        for ( int i =1 ; i <= 5; i++)
        {
            //Variable to store the bound for maximum number that can be generated by
            //random nbumber generator
            int BOUND;

            //If operation is multiplication then set the max. bound to small numbers
            if (operation.equals("MULTIPLICATION"))
            {
                BOUND = 10;
            }
            else
            {
                BOUND = 15;
            }

            //Generate the random numbers
            Integer num1 = randomNum.nextInt(BOUND),
                    num2 = randomNum.nextInt(BOUND);

            //Avoid both numbers to be 0
            //Regenerate the numbers
            while (num2 == 0 && num1 == 0)
            {
                num1 = randomNum.nextInt(BOUND);
                num2 = randomNum.nextInt(BOUND);
            }


            //Set the questionBank class attributes by calling the constructor
            questionBank.add(new QuestionModel(num1, num2, operationResult(operator, num1, num2)));
        }

        //Set the focus on answer EditText
        ansET.requestFocus();

        //Set the text view with the current question number
        questionNumTV.setText("Question No. " + (index + 1));

        //Call updateQuestion to update the textview with the numbers for first time
        updateQuestion();
    }

    /**
     * Method   : nextQuestion
     * Details : Method to handle the Next Question button click
     * Based on the size of question bank (5) displays the
     * next questions to user on clicking button. Calls the
     * updateQuestion to display the numbers in textview for
     * each question. Gets the user input and calls checkAnswers().
     */
    public void nextQuestion(View view)
    {
        //If user does not input answers in EditText throw toast error msg
        if( ansET.getText().toString().matches(""))
        {
            //display an error message /Toast message
            Toast.makeText(this,"The answer field cannot be empty",Toast.LENGTH_SHORT).show();
            return;
        }//end if

        //Get the user answer and add into ArrayList
        Integer answer = Integer.parseInt(ansET.getText().toString());
        userAnswers.add(answer);

        //Increase the index/counter for question by 1
        index = (index + 1) % questionBank.size();
        questionNumTV.setText("Question No. " + (index+1));

        //Update the numbers textviews with the next pair of numbers which are generated
        //randomly from the questionBank arraylist
        updateQuestion();

        //Index the counter kept to maintian the question numbers
        //If the index is the last question i.e 5th then create
        // the button to "Get Score" and onclicking that
       // button it calls the checkAnswer()
        if ( index == questionBank.size()-1)
        {
            Button btn = (Button)view;
            btn.setText(R.string.result_label);

            //Button handler
            btn.setOnClickListener(new View.OnClickListener() {
                @Override
                public void onClick(View v)
                {
                    if( ansET.getText().toString().matches(""))
                    {
                        //display an error message /Toast message
                        Toast.makeText(view.getContext(),"The answer field cannot be empty",Toast.LENGTH_SHORT).show();
                        return;
                    }//end if

                    //Get the user answer from edit text
                    Integer answer = Integer.parseInt(ansET.getText().toString());

                    //Add to the arraylist
                    userAnswers.add(answer);

                    //Call checkAnswer for the result
                    checkAnswers(userAnswers);
                }//end onClick
            });
            return;
        }//end if
    }//end nextQuestion


    /**
     * Method   : updateQuestion
     * Details : Method updates the question
     * Sets the textviews with numbers in the question
     * bank arraylist which has pairs of numbers (num1,num2)
     * randomly generated.
     */
    public void updateQuestion()
    {
        //Set the numbers in textviews
        num1TV.setText(((Integer) questionBank.get(index).getNum1()).toString());
        num2TV.setText(((Integer) questionBank.get(index).getNum2()).toString());
        ansET.setText("");
    }//end updateQuestion


    /**
     * Method   : checkAnswers
     * Details : Method to handle Get Score button click
     * it find the correct answers of user. Compare the user
     * answers with the actual correct answers.
     * Maintain the count and the status of each question
     */
    public void checkAnswers(ArrayList<Integer> ans)
    {
        //Variable to store the correctly answered questions count
        int count=0;

        //Loop for 5 questions
        for ( int i=0; i<5; i++)
        {
            //Check the user answers with the calculated answers
            if (ans.get(i) == questionBank.get(i).getAnswer() )
            {
                //If answer is correct add the question number in list
                correctAnswers.add(i+1);

                //Increase counter to find the total correct answers
                count++;
            }
        }//end for

        //Create intent object
        Intent getResult = new Intent(QuestionsActivity.this, ResultActivity.class);

        //Put the details for the score and the question status(incorrect/correct)
        getResult.putExtra("result",count+"/" + questionBank.size());
        getResult.putIntegerArrayListExtra("status", correctAnswers);

        //Start the ResultActivity
        startActivity(getResult);

    }//end checkAnswers


    /**
     * Method   : operationResult
     * Details : Method to calculate the answer of
     * the question for the specific operation.
     */
    public int operationResult(String operator, int a, int b)
    {
        if (operator.equals("+"))
            return a + b;
        else if (operator.equals("-"))
            return a - b;
        else if (operator.equals("*"))
            return a * b;
        else
            return 0;
    }


    /**
     * Method   : goBack
     * Details : Method to handle button click
     * Returns to MainActivity
     */
    public void goBack(View view)
    {
        //Call finish to go back to MainActivity
        finish();

    }//end goBack
}//end QuestionsActivity